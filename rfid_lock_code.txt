/*
 * Pin layout used:
 * -----------------------------------------------------------------------------------------
 *             MFRC522      Arduino       Arduino   Arduino    Arduino          Arduino
 *             Reader/PCD   Uno/101       Mega      Nano v3    Leonardo/Micro   Pro Micro
 * Signal      Pin          Pin           Pin       Pin        Pin              Pin
 * -----------------------------------------------------------------------------------------
 * RST/Reset   RST          8             5         D9         RESET/ICSP-5     RST
 * w            53        D10        10               10
 * SPI MOSI    MOSI         11 / ICSP-4   51        D11        ICSP-4           16
 * SPI MISO    MISO         12 / ICSP-1   50        D12        ICSP-1           14
 * SPI SCK     SCK          13 / ICSP-3   52        D13        ICSP-3           15
 */

#include <SPI.h>
#include <MFRC522.h>
#include<Servo.h>

#define RST_PIN         8             // Configurable
#define SS_PIN          10            // Configurable

byte readCard[4];                     // For storing the introduced card details
byte master[]={222 , 109 , 84 , 115}; // For storing the master card details
MFRC522 mfrc522(SS_PIN, RST_PIN);     // Create MFRC522 instance
//Lights and buzzer configuration
int red=5;
int green=3;
int buzz=6;
int inPin=7;

Servo ser;

void setup() 
{

  pinMode(red, OUTPUT);
  pinMode(green, OUTPUT);
  pinMode(buzz,OUTPUT);
  pinMode(inPin,INPUT);
  
  ser.attach(9);
  ser.write(1);
  digitalWrite(red,HIGH);
  
	Serial.begin(9600);		// Initialize serial communications with the PC
	while (!Serial);		 // Do nothing if no serial port is opened (added for Arduinos based on ATMEGA32U4)
	SPI.begin();			  // Init SPI bus
	mfrc522.PCD_Init();		// Init MFRC522
	mfrc522.PCD_DumpVersionToSerial();	// Show details of PCD - MFRC522 Card Reader details
	Serial.println("Scan PICC to see UID, SAK, type, and data blocks...");
}

void loop() 
{	
  
    
    if (digitalRead(inPin) == HIGH)
    {
      delay(500);
      digitalWrite(red,HIGH);
      digitalWrite(green, LOW);
      ser.write(1);
    }
    
   // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) {
    return;
  }

  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) {
    return;
  }
  
 getInfo();

  if(checkInfo())
  {
    Serial.println("Access Granted");
    digitalWrite(green,HIGH);
    digitalWrite(red,LOW);
    ser.write(90);
    delay(9000);
    
  }
  else
  {
    Serial.println("Access Denied");
    for(int i=0;i<4;i++)
    {
      tone(buzz,5000,500);
      delay(500);
    }
  }
  
}
void getInfo()
{
   Serial.println("Scanned PICC's UID:");
  for (int i = 0; i < 4; i++) 
  { 
    readCard[i] = mfrc522.uid.uidByte[i];
    Serial.print(readCard[i], HEX);
  }
  Serial.println("");
  mfrc522.PICC_HaltA(); 
  for(int i=0;i<4;i++)
  Serial.println(readCard[i]);
}
boolean checkInfo()
{
  for(int i=0;i<4;i++)
  {
    if(!(master[i]==readCard[i]))
    {
      return false;
    }
  }
  return true;
}
